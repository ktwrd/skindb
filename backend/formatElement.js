const toolbox = require("tinytoolbox")

module.exports.animated = {
	interface: [
		"play-skip",
		"hit0",
		"hit50",
		"hit100",
		"hit100k",
		"hit300",
		"hit300g",
		"hit300k",
		"scorebar-colour",
		"menu-back",
	]
}

module.exports.elements = {
	interface: [
		"menu-background",
		"welcome_text",
		"menu-snow",
		"button-left",
		"button-middle",
		"button-right",
		"cursor",
		"cursormiddle",
		"cursor-smoke",
		"cursortrail",
		"cursor-ripple",
		"selection-mod-autoplay",
		"selection-mod-cinema",
		"selection-mod-doubletime",
		"selection-mod-easy",
		"selection-mod-fadein",
		"selection-mod-flashlight",
		"selection-mod-halftime",
		"selection-mod-hardrock",
		"selection-mod-hidden",
		"selection-mod-key1",
		"selection-mod-key2",
		"selection-mod-key3",
		"selection-mod-key4",
		"selection-mod-key5",
		"selection-mod-key6",
		"selection-mod-key7",
		"selection-mod-key8",
		"selection-mod-key9",
		"selection-mod-keycoop",
		"selection-mod-mirror",
		"selection-mod-nightcore",
		"selection-mod-nofail",
		"selection-mod-perfect",
		"selection-mod-random",
		"selection-mod-relax",
		"selection-mod-relax2",
		"selection-mod-scorev2",
		"selection-mod-spunout",
		"selection-mod-suddendeath",
		"selection-mod-target",
		"options-offset-tick",
		"play-skip",
		"play-warningarrow",
		"arrow-pause",
		"arrow-warning",
		"masking-border",
		"multi-skipped",
		"section-fail",
		"section-pass",
		"count1",
		"count2",
		"count3",
		"go",
		"ready",
		"hit0",
		"hit50",
		"hit100",
		"hit100k",
		"hit300",
		"hit300g",
		"hit300k",
		"inputoverlay-background",
		"inputoverlay-key",
		"pause-overlay",
		"fail-background",
		"pause-back",
		"pause-continue",
		"pause-replay",
		"pause-retry",
		"scorebar-bg",
		"scorebar-colour",
		"scorebar-ki",
		"scorebar-kidanger",
		"scorebar-kidanger2",
		"scorebar-marker",
		"score-0",
		"score-1",
		"score-2",
		"score-3",
		"score-4",
		"score-5",
		"score-6",
		"score-7",
		"score-8",
		"score-9",
		"score-comma",
		"score-dot",
		"score-percent",
		"score-x",
		"ranking-XH",
		"ranking-XH-small",
		"ranking-X",
		"ranking-X-small",
		"ranking-SH",
		"ranking-SH-small",
		"ranking-S",
		"ranking-S-small",
		"ranking-A",
		"ranking-A-small",
		"ranking-B",
		"ranking-B-small",
		"ranking-C",
		"ranking-C-small",
		"ranking-D",
		"ranking-D-small",
		"ranking-accuracy",
		"ranking-graph",
		"ranking-maxcombo",
		"ranking-panel",
		"ranking-perfect",
		"ranking-title",
		"ranking-replay",
		"ranking-retry",
		"ranking-winner",
		"scoreentry-0",
		"scoreentry-1",
		"scoreentry-2",
		"scoreentry-3",
		"scoreentry-4",
		"scoreentry-5",
		"scoreentry-6",
		"scoreentry-7",
		"scoreentry-8",
		"scoreentry-9",
		"scoreentry-comma",
		"scoreentry-dot",
		"scoreentry-percent",
		"scoreentry-x",
		"menu-back",
		"menu-button-background",
		"selection-mode",
		"selection-mode-over",
		"selection-mods",
		"selection-mods-over",
		"selection-random",
		"selection-random-over",
		"selection-options",
		"selection-options-over",
		"selection-tab",
		"star",
		"star2",
		"mode-osu",
		"mode-taiko",
		"mode-fruits",
		"mode-mania",
		"mode-osu-med",
		"mode-taiko-med",
		"mode-fruits-med",
		"mode-mania-med",
		"mode-osu-small",
		"mode-taiko-small",
		"mode-fruits-small",
		"mode-mania-small",
	]
}

module.exports.parse = async (gData) => {
	const crypto = require("crypto")
	const toolbox = require("tinytoolbox")
	/*
{
	b64: "",
	filename: "",
	animgroup: ""
	source: "",
	userid: "",
}
	*/
	var elementName = await gData.filename.split(".")[gData.filename.split(".").length - 2];

	var category = "unknown";
	await toolbox.async.forEach(toolbox.JSON.toArray(module.exports.elements),(elementGroup) => {
		if (toolbox.inArray(elementGroup[1],elementName)) {
			category = elementGroup[0];
		}
	})

	var md5Hash = await crypto.createHash('md5').update(gData.b64).digest("hex");
	var isAnimated = await toolbox.inArray(module.exports.animated[category],elementName)

	return {
		MD5: md5Hash,
		animated: isAnimated,
		animation_group: animgroup,
		approved: false,
		element: elementName,
		extention: gData.filename.split(".")[gData.filename.split(".").length - 1],
		skin_source: gData.source || "unknown",
		uploader: gData.userid,
		category: category
	}
}